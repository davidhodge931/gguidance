guide_axis
devtools::load_all(".")
guide_cap
guide_axis
is.atomic(unit(1, "npc"))
is.atomic(I(unit(1, "npc")))
?register_theme_elements
guide_line <- function(cap = "none") {
if (is.logical(cap)) {
check_bool(cap)
cap <- if (cap) "both" else "none"
}
if (is.character(cap)) {
cap <- switch(
"none"  = c(-Inf, Inf),
"both"  = function(breaks, limits) range(breaks, na.rm = TRUE),
"upper" = function(breaks, limits) c(-Inf, max(breaks, na.rm = TRUE)),
"lower" = function(breaks, limits) c(min(breaks, na.rm = TRUE), Inf),
arg_match0(cap, c("none", "both", "upper", "lower"))
)
}
if (!is.function(cap) && !is.atomic(cap)) {
cli::cli_abort("{.arg cap}")
}
new_guide(
cap = cap,
available_aes = c("any", "x", "y", "r", "theta")
)
}
guide_line()
guide_line <- function(cap = "none") {
if (is.logical(cap)) {
check_bool(cap)
cap <- if (cap) "both" else "none"
}
if (is.character(cap)) {
cap <- switch(
cap
"none"  = c(-Inf, Inf),
guide_line <- function(cap = "none") {
if (is.logical(cap)) {
check_bool(cap)
cap <- if (cap) "both" else "none"
}
if (is.character(cap)) {
cap <- switch(
cap,
"none"  = c(-Inf, Inf),
"both"  = function(breaks, limits) range(breaks, na.rm = TRUE),
"upper" = function(breaks, limits) c(-Inf, max(breaks, na.rm = TRUE)),
"lower" = function(breaks, limits) c(min(breaks, na.rm = TRUE), Inf),
arg_match0(cap, c("none", "both", "upper", "lower"))
)
}
if (!is.function(cap) && !is.atomic(cap)) {
cli::cli_abort("{.arg cap}")
}
new_guide(
cap = cap,
available_aes = c("any", "x", "y", "r", "theta")
)
}
guide_line()
GuideLine <- ggproto(
"GuideLine", Guide,
)
guide_line()
guide_line()
guide_line <- function(cap = "none") {
if (is.logical(cap)) {
check_bool(cap)
cap <- if (cap) "both" else "none"
}
if (is.character(cap)) {
cap <- switch(
cap,
"none"  = c(-Inf, Inf),
"both"  = function(breaks, limits) range(breaks, na.rm = TRUE),
"upper" = function(breaks, limits) c(-Inf, max(breaks, na.rm = TRUE)),
"lower" = function(breaks, limits) c(min(breaks, na.rm = TRUE), Inf),
arg_match0(cap, c("none", "both", "upper", "lower"))
)
}
if (!is.function(cap) && !is.atomic(cap)) {
cli::cli_abort("{.arg cap}")
}
new_guide(
cap = cap,
available_aes = c("any", "x", "y", "r", "theta"),
super = GuideLine
)
}
GuideLine <- ggproto(
"GuideLine", Guide,
)
guide_line <- function(cap = "none") {
if (is.logical(cap)) {
check_bool(cap)
cap <- if (cap) "both" else "none"
}
if (is.character(cap)) {
cap <- switch(
cap,
"none"  = c(-Inf, Inf),
"both"  = function(breaks, limits) range(breaks, na.rm = TRUE),
"upper" = function(breaks, limits) c(-Inf, max(breaks, na.rm = TRUE)),
"lower" = function(breaks, limits) c(min(breaks, na.rm = TRUE), Inf),
arg_match0(cap, c("none", "both", "upper", "lower"))
)
}
if (!is.function(cap) && !is.atomic(cap)) {
cli::cli_abort("{.arg cap}")
}
new_guide(
cap = cap,
available_aes = c("any", "x", "y", "r", "theta"),
super = GuideLine
)
}
Guide$params
guide_line <- function(cap = "none") {
if (is.logical(cap)) {
check_bool(cap)
cap <- if (cap) "both" else "none"
}
if (is.character(cap)) {
cap <- switch(
cap,
"none"  = c(-Inf, Inf),
"both"  = function(breaks, limits) range(breaks, na.rm = TRUE),
"upper" = function(breaks, limits) c(-Inf, max(breaks, na.rm = TRUE)),
"lower" = function(breaks, limits) c(min(breaks, na.rm = TRUE), Inf),
arg_match0(cap, c("none", "both", "upper", "lower"))
)
}
if (!is.function(cap) && !is.atomic(cap)) {
cli::cli_abort("{.arg cap}")
}
new_guide(
cap = cap,
available_aes = c("any", "x", "y", "r", "theta"),
super = GuideLine
)
}
GuideLine <- ggproto(
"GuideLine", Guide,
)
guide_line()
cli::cli_abort("{.arg cap} must be a {.cls function} or {.cls vector}.")
stop_input_type
stop_input_type(cap)
stop_input_type(cap, what = "foobar")
cap <- "flurb"
stop_input_type(cap, what = "foobar")
stop_input_type(cap, what = "a {.cls function} or {.cls vector}")
stop_input_type
stop_input_type(cap, what = I("a {.cls function} or {.cls vector}"))
as_cli
stop_input_type(cap, what = as_cli("a {.cls function} or {.cls vector}"))
guide_legend
x <- scale_colour_viridis_c()
x$train(c(0, 10))
x$map(Inf)
x$map(-Inf)
x <- scale_colour_viridis_c(oob = oob_squish)
x$map(-Inf)
x$train(c(0, 10))
x$map(-Inf)
x$map
x$get_limits()
x$rescale(x$oob(-Inf, c(0, 10)), c(0, 10))
x$oob
GuideAxis$build_decor
GuideAxis$extract_decor
GuideAxis$extract_key
Guide$extract_key
GuideAxisTheta$extract_decor
GuideAxis$transform
x
x$map
GuideAxis$build_decor
GuideAxisTheta$build_decor
rep(1:3, each = 2, length.out = 4)
rep(1:3, each = 2, length.out = 6)
rep(1:3, each = 2, length.out = 5)
ggplot2:::element_grob.element_line
vec_unrep(c(1,1,2,2,3))
vec_unrep(c(1,1,2,2,3))
vctrs::vec_unrep(c(1,1,2,2,3))
vctrs::vec_unrep(c(1,1,2,2,3))$times
Guide$setup_elements
?theme
GuideAxis$setup_elements
GuideAxisTheta$setup_elements
paste("", "foo", sep = '.')
Guide$setup_params
Guide$draw
GuideAxisTheta$assemble_drawing
devtools::load_all(".")
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line()))
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line()))
guide_line()
guide_line()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
guide_line()
devtools::load_all(".")
guide_line()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line()))
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line()))
ggplot2:::empty
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line()))
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line())) + theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = "both")))
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = "both")))
cap
decor
decor
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = "both")))
decor
params
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = "both"))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = identity))) +
theme(axis.line = element_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
decor
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
traceback()
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
traceback()
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
coord_radial() +
guides(x = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
coord_radial() +
guides(theta = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
coord_radial() +
guides(theta = guide_axis_stack("axis", guide_line(cap = unit(c(0.2, 0.8), "npc")))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
coord_radial() +
guides(theta = guide_axis_stack("axis", guide_line(cap = "both"))) +
theme(axis.line = element_line())
Guide$setup_params
rlang::last_trace()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
coord_radial() +
guides(theta = guide_axis_stack("axis_theta", guide_line(cap = "both"))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
coord_radial() +
guides(theta = guide_axis_stack("axis_theta", guide_line(cap = identity))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty))
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_line(cap = unit(c(0.2, 0.8), "npc"))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_line(cap = unit(c(0.2, 0.8), "npc"))) +
theme(axis.line = element_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_line(cap = unit(c(0.2, 0.8), "npc"))) +
theme(axis.line = element_line())
position
Guide$params
guide_axis
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
guides(x = guide_line(cap = unit(c(0.2, 0.8), "npc"))) +
theme(axis.line = element_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
decor
Guide$train
devtools::load_all(".")
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
decor
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
decor
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
decor
cap
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
decor
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
traceback()
GuideAxisStack$draw
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
debugonce(ggplot2:::table_add_legends)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
legends
grid.draw(legends$right)
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
elements$line
xx <-     element_grob(
elements$line,
x = x %||% unit(decor$x, "npc"),
y = y %||% unit(decor$y, "npc"),
id.lengths = vctrs::vec_unrep(decor$group)$times
)
xx
grid.draw(xx)
devtools::load_all(".")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = cty)) +
guides(colour = guide_line())
library(tidyverse)
dt = tibble::tribble(
~term, ~estimate, ~std.error,
"week_1",        -1,        0.2,
"week_2",     -0.75,        0.2,
"week_3",      -0.5,        0.2,
"week_4",     -0.25,        0.2,
"week_5",         0,        0.2,
"week_6",      0.25,        0.2,
"week_7",       0.5,        0.2,
"week_8",      0.75,        0.2,
"week_9",         1,        0.2,
"week_10",      1.25,        0.2,
"week_11",       1.5,        0.2,
"week_12",      1.75,        0.2
) |>
mutate(term = factor(term, levels = paste0("week_", 1:12)),
ci_lower = estimate - 1.96*std.error,
ci_upper = estimate + 1.96*std.error)
ggplot(dt, aes(x = term, y = estimate)) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper,  width = 0.2)) +
geom_point(shape = 21, fill = "#f82267", color = "#bd2e38", size = 2)
ggplot(dt, aes(x = term, y = estimate)) +
annotate(geom = "rect", xmin = "week_6", xmax = "week_12", ymin = -Inf, ymax = Inf,
fill = "#5cc9f5", alpha = 0.5) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper,  width = 0.2)) +
geom_point(shape = 21, fill = "#f82267", color = "#bd2e38", size = 2)
ggplot(dt, aes(x = term, y = estimate)) +
annotate(geom = "rect", xmin = "week_6", xmax = "week_12", ymin = -Inf, ymax = Inf,
fill = "#5cc9f5", alpha = 0.5) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper,  width = 0.2)) +
geom_point(shape = 21, fill = "#f82267", color = "#bd2e38", size = 2) +
scale_x_discrete(drop = FALSE)
devtools::load_all(".")
stop_incompatible_size(10)
vctrs:::stop_incompatible_size(10)
vctrs:::stop_incompatible_size(10, 5)
vctrs:::stop_incompatible_size(10, 5, 7)
vctrs:::stop_incompatible_size(10, 5, 7, 9)
vctrs:::stop_incompatible_size(10, 5, 7, 9, x_arg = "foo", y_arg = "bar")
Guide$override_elements
usethis::create_package(".")
usethis::create_package("~/packages/gguidance/")
usethis::create_package("../gguidance/")
